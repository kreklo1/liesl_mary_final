---
output: html_document
editor_options: 
  chunk_output_type: console
---

## Libraries
```{r}
library(tidyverse)
library(ggplot2)
library(leaflet)
library(readr)
library(wordcloud)
library(stringr)
library(tidytext)
library(kableExtra)
library(beepr)
```

## Data
```{r}
parks <- read_csv("datasets/Parks_Properties_20240507.csv")
airbnb_data <- read_csv("datasets/airbnb_data.csv")
rats <- read_csv("datasets/Rat_Sightings_20240507.csv")
```


## Interactive Leaflet map
```{r}
leaflet() |>
    addTiles() |>
    setView(lng = mean(airbnb_data$Longitude), lat = mean(airbnb_data$Latitude), 
            zoom = 10) |> 
    addCircleMarkers(data = airbnb_data,
        lat = ~ Latitude, 
        lng = ~ Longitude, 
        popup = ~ Name, 
        radius = ~ 10,  
        weight = 3,
        color = "hotpink", 
        fillColor = "pink")
```

  
##Two variable comparisons
```{r}
airbnb_parsed <- airbnb_data |>
  select(Name, Title, Id, `Listing URL`, Price, Beds, Baths, Bedrooms, `Average Rating`, `Number of Reviews`, `More Details`, `Listing Type`, `Room Type Category`) |>
  mutate(price_parsed = parse_number(Price))
airbnb_nona <- na.omit(airbnb_parsed)
```


```{r}
airbnb_parsed |>
  ggplot(aes(y = price_parsed, x = `Average Rating`)) +
  geom_point() 
```
```{r}
airbnb_parsed |>
  ggplot(aes(y = `Number of Reviews`, x = `Average Rating`)) +
  geom_point() 
```
```{r}
airbnb_parsed |>
  ggplot(aes(y = `Number of Reviews`, x = price_parsed)) +
  geom_point() 
```
```{r}
airbnb_parsed |>
  ggplot(aes(y = `More Details`)) +
  geom_bar() 
```

Interchangeable variables to implement with the shiny app
  - Price
  - Location (how)
  - Review (done⭐) (done #)
    - # 
    - ⭐ 
  - Tags (e.g. guest favorite) (not a scatter plot variable)
  
## Word Cloud
```{r}
word <- airbnb_data |>
  select(Name) |>
  mutate(Name = str_to_lower(Name),
         word = str_split(Name, "\\s+"),
         word = gsub("([[:punct:]])(?=[^[:alnum:]]*$)", "", word, perl = TRUE)) |>
  unnest(word) |>
  anti_join(stop_words) |>
  count(word)

```
concerns: bdrm, bed room, bedroom BR are all meaning bedroom but they don't all say it the same way  
,
         words = str_remove_all(words, "")
```{r}
trytrytry <- str_split(airbnb_data$Name, "\\s+")[[1]]
trytrytry
#trying to figure it out
```

```{r}
word_freq <- table(words)
word_freq
```

```{r, echo=FALSE}
titlePanel("TITLE")

inputPanel(
  selectInput("x", label = "x-axis variable:",
    choices = c("Price" = "price_parsed",
                "⭐ Review" = "Average Rating",
                "Number of Reviews" = "Number of Reviews")),
    selectInput("y", label = "y-axis variable:",
    choices = c("Price" = "price_parsed",
                "⭐ Review" = "Average Rating",
                "Number of Reviews" = "Number of Reviews"))
)

renderPlot({

        ggplot(airbnb_parsed, aes(x = .data[[input$x]], y =  .data[[input$y]])) +
          geom_jitter(size = 2, alpha = 0.25) 
})
```


```{r}
library(beepr)
summary_stats_data <- airbnb_with_boroughs|>
  mutate(Price=parse_number(Price))|>
  group_by(borough)

summary_stats_data |>
  ggplot()+
  geom_boxplot(aes(y = borough, x = Price), color="deeppink") +
  theme_minimal() +
  labs(y = "Borough", x = "Price") 
#Replace Price with "Beds", "Baths", `Average Rating`,`Number of Reviews`, `Cleanliness Rating`, etc.
#Note that Staten Island only has one listing
beep(sound = 11)
```

My favorite Airbnb in New York city is [this one](https://www.airbnb.com/rooms/41178612?source_impression_id=p3_1715728914_jTNcY96IHSz6LdHw). It has a nice location in SoHo with a terrace, lots of natural lighting, and fun furniture. In the table below you can see the important information for this stay!

```{r, echo = FALSE}
liesls_fav <- airbnb_with_boroughs |>
  filter(`Room Type Category` == "entire_home",
         Name == "Space Age SoHo Penthouse: Private Terrace & Roof") |>
  select("Name", 
         "Title", 
         "Price", 
         "Baths", 
         "Bedrooms", 
         "Average Rating", 
         "Number of Reviews", 
         "Room Type Category", 
         "More Details", 
         "borough",
         "Latitude",
         "Longitude")
kable(liesls_fav, format = "html")|>
  kable_styling()
```

```{r, echo=FALSE}
rat_icon <- makeIcon(
  iconUrl = "https://icons.iconarchive.com/icons/google/noto-emoji-animals-nature/256/22251-rat-icon.png",
  iconWidth = 28,
  iconHeight = 28
)

carrot_icon <- makeIcon(
  iconUrl = "https://images.emojiterra.com/google/noto-emoji/unicode-15.1/color/svg/1f955.svg",
  iconWidth = 29,
  iconHeight = 29
)

star_icon<-makeIcon(iconUrl="https://www.clipartmax.com/png/full/85-851033_filesolid-bright-green-star-1-green-star-no-background.png", iconWidth=48, iconHeight=48)

renderLeaflet({
leaflet(width = "100%", height = 600) |>
  addTiles() |>
  setView(lng = -74.00, lat = 40.74, zoom = 12)|>
  addMarkers(data=farmers_markets, lng=~longitude, lat=~latitude, icon = carrot_icon, popup = ~paste(marketname, "</br>", daysoperation, hoursoperations))|>
  addMarkers(data=rats_graph, lng=~Longitude, lat=~Latitude, icon = rat_icon, popup = ~paste("squeak squeak:)"))|>
  addPolygons(data=parks_sf, color="deeppink", popup = ~paste(SIGNNAME))|>
  addMarkers(lng = -73.99961, lat = 40.71701, popup = "Liesl's Favorite!", 
               icon = star_icon)
})
beep(sound = 11)
```
